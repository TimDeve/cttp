(load "models.carp")

(use Koi)

(deftype Res [status HttpStatus
              version String
              headers (Map String (Array String))
              body String])

(defmodule Res
  (sig send (Fn [HttpStatus String String] Response))
  (defn send [status content-type body]
   (Res.init
     status
     @"HTTP/1.1"
     {@"Server" [@"Carp"]
      @"Content-Type" [content-type]
      @"Content-Length" [(str (length &body))]}
     body))

  (sig found (Fn [String] Response))
  (defn found [uri]
   (Res.init
     (HttpStatus.Found)
     @"HTTP/1.1"
     {@"Server" [@"Carp"]
      @"Location" [uri]
      @"Content-Length" [@"0"]}
     @""))

  (defn str-headers [r]
   (Map.kv-reduce
     &(fn [acc k v]
       (fmt "%s\r\n%s"
            &acc
            &(join "\r\n" &(Array.copy-map &(fn [x] (fmt "%s: %s" k x)) v))))
     @""
     (headers r)))

  (defn str [res]
    (fmt "%s %d %s%s\r\n\r\n%s"
         (version res)
         (HttpStatus.code (status res))
         &(HttpStatus.message (status res))
         &(str-headers res)
         (body res))))
